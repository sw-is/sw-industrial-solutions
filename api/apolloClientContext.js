import React, { createContext, useContext } from 'react';import { useQuery } from '@apollo/experimental-nextjs-app-support/ssr';import { GET_CONTENT } from '../api/queries';export const ContentContext = createContext({	queryData: {		loading: true,		error: false	},	refetch: () => {		{}	},	locale: ''});export const ContentProvider = ({	locale,	children}) => {	const {		data,		refetch,		error	} = useQuery(GET_CONTENT, {		variables: { locale }	});	const value = {		queryData: {			data,			loading: false,			error		},		refetch,		locale	};	return (		<ContentContext.Provider value={value}>{children}</ContentContext.Provider>	);};export const getContent = () => {	const context = useContext(ContentContext);	if (!context) {		throw new Error(			'getContent must be used within a ContentProvider'		);	}	const {		queryData: {			data,			loading,			error		},		refetch	} = context;	const getItems = (collection) => {		return data?.[collection].items[0];	};	const globalItems = getItems('globalsCollection');	const heroItems = getItems('topIntroductionCollection');	const aboutItems = getItems('aboutCollection');	const servicesItems = getItems('servicesCollection');	const contactsItems = getItems('contactsCollection');	const allItems = globalItems && heroItems && aboutItems && servicesItems && contactsItems;	return {		loading: !allItems || loading,		error: !allItems || error,		globalItems,		heroItems,		aboutItems,		servicesItems,		contactsItems,		refetch	};};