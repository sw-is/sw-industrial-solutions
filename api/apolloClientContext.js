import React, {createContext, useContext} from 'react';import {useQuery} from '@apollo/experimental-nextjs-app-support/ssr';import {GET_CONTENT} from '../api/queries';export const ContentContext = createContext({	queryData: {loading: true, error: false},	refetch: () =>  {{}},	locale:''});export const ContentProvider = ({locale, children}) => {	const {data, refetch, error} = useQuery(GET_CONTENT, {		variables: { locale },	});	const value = {queryData:{data, loading:false, error}, refetch, locale};	return(		<ContentContext.Provider value={value}>{children}</ContentContext.Provider>	);}export const getContent = () =>{	const context = useContext(ContentContext);	if(!context){		throw new Error(			'getContent must be used within a ContentProvider'		)	}const {	queryData: {data, loading, error},	refetch,} = context;const getItems = (collection) => {		return data?.[collection].items[0];	};const globalItems = getItems('globalsCollection');const heroItems = getItems('topIntroductionCollection');const aboutItems = getItems('aboutCollection');// const checkAllData = () => {// 	return !!(globalItems && heroItems);//// };// const contentResponse = {// 	loading: loading,// 	error: !(globalItems && heroItems) || error,// 	locale,// 	setLocale,// 	globalItems,// 	heroItems,// 	refetch// }//// 	console.log('contentResponse =>',contentResponse);	return   {		loading: loading,		error: !(globalItems && heroItems) || error,		globalItems,		heroItems,		aboutItems,		refetch	};}